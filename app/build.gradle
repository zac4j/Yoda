apply plugin: 'com.android.application'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  defaultConfig {
    applicationId "com.zac4j.yoda"
    minSdkVersion 21
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
  }

//  signingConfigs {
//    debug {
//      storeFile file('debug.keystore')
//      storePassword 'android'
//      keyAlias 'androiddebugkey'
//      keyPassword 'android'
//    }
//  }

  buildTypes {
//    debug {
//      applicationIdSuffix '.development'
//      signingConfig signingConfigs.debug
//    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  lintOptions {
    abortOnError false
  }
  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/rxjava.properties'
  }
}

repositories {
  flatDir {
    dirs 'libs'
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile(name: 'weibosdk', ext: 'aar')
  compile "com.android.support:appcompat-v7:${supportLibVersion}"
  compile "com.android.support:cardview-v7:${supportLibVersion}"
  compile "com.android.support:design:${supportLibVersion}"
  // Retrofit2
  compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
  compile "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
  compile "com.squareup.retrofit2:converter-jackson:${retrofitVersion}"
  // Stetho
  compile "com.facebook.stetho:stetho:${stethoVersion}"
  compile "com.facebook.stetho:stetho-okhttp3:${stethoVersion}"
  // Reactive
  compile "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}"
  compile "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"
  compile "com.jakewharton.rxrelay2:rxrelay:${rxrelayVersion}"
  compile "com.trello.rxlifecycle2:rxlifecycle:${rxlifecycleVersion}"
  // If you want to bind to Android-specific lifecycles
  compile "com.trello.rxlifecycle2:rxlifecycle-android:${rxlifecycleVersion}"

  // If you want pre-written Activities and Fragments you can subclass as providers
  compile "com.trello.rxlifecycle2:rxlifecycle-components:${rxlifecycleVersion}"
  // Dagger2
  compile "com.google.dagger:dagger:${daggerVersion}"
  annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
  // AutoValue
  provided "com.google.auto.value:auto-value:${autovalueVersion}"
  annotationProcessor "com.google.auto.value:auto-value:${autovalueVersion}"
  annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'
  // SQL
  compile "com.squareup.sqlbrite:sqlbrite:${sqlbriteVersion}"
  // ButterKnife
  compile "com.jakewharton:butterknife:${knifeVersion}"
  annotationProcessor "com.jakewharton:butterknife-compiler:${knifeVersion}"
  // Glide
  compile "com.github.bumptech.glide:glide:${glideVersion}"
  // PhotoView
  compile "com.github.chrisbanes:PhotoView:${photoviewVersion}"
  // Log
  compile "com.jakewharton.timber:timber:${timberVersion}"
}
